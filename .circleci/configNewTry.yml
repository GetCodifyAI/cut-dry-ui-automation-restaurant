version: 2.1
orbs:
  slack: circleci/slack@5.1.1

jobs:

  nightly-build-and-test-1:
    docker:
      - image: cimg/base:stable
    resource_class: xlarge
    steps:
      - checkout
      - run:
          name: Install Java 22
          command: |
            sudo apt-get update && sudo apt-get install -y wget
            wget https://download.java.net/java/GA/jdk22/830ec9fcccef480bb3e73fb7ecafe059/36/GPL/openjdk-22_linux-x64_bin.tar.gz
            sudo mkdir -p /usr/lib/jvm
            sudo tar zxvf openjdk-22_linux-x64_bin.tar.gz -C /usr/lib/jvm
            sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk-22/bin/java 2200
            sudo update-alternatives --config java
            echo 'export PATH="/usr/lib/jvm/jdk-22/bin:$PATH"' >> $BASH_ENV
            source $BASH_ENV
            java -version
      - run:
          name: Install Maven
          command: |
            sudo apt-get install -y maven
            mvn -version
      - run:
          name: Install Chrome
          command: |
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
            sudo apt-get update
            sudo apt-get install -y google-chrome-stable
            google-chrome --version
      - run:
          name: Build and run nightly tests
          command: mvn clean test "-Dsurefire.suiteXmlFiles=regression1.xml" "-Drun.headless=true" "-Dtest.env=uat" || true
      - store_artifacts:
          path: target/surefire-reports
          destination: nightly-build-and-test-artifacts-1
    executor:

  nightly-build-and-test-2:
    docker:
      - image: cimg/base:stable
    resource_class: xlarge
    steps:
      - checkout
      - run:
          name: Install Java 22
          command: |
            sudo apt-get update && sudo apt-get install -y wget
            wget https://download.java.net/java/GA/jdk22/830ec9fcccef480bb3e73fb7ecafe059/36/GPL/openjdk-22_linux-x64_bin.tar.gz
            sudo mkdir -p /usr/lib/jvm
            sudo tar zxvf openjdk-22_linux-x64_bin.tar.gz -C /usr/lib/jvm
            sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk-22/bin/java 2200
            sudo update-alternatives --config java
            echo 'export PATH="/usr/lib/jvm/jdk-22/bin:$PATH"' >> $BASH_ENV
            source $BASH_ENV
            java -version
      - run:
          name: Install Maven
          command: |
            sudo apt-get install -y maven
            mvn -version
      - run:
          name: Install Chrome
          command: |
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
            sudo apt-get update
            sudo apt-get install -y google-chrome-stable
            google-chrome --version
      - run:
          name: Build and run nightly tests
          command: mvn clean test "-Dsurefire.suiteXmlFiles=regression2.xml" "-Drun.headless=true" "-Dtest.env=uat" || true
      - store_artifacts:
          path: target/surefire-reports
          destination: nightly-build-and-test-artifacts-2
    executor:

  calculate-pass-fail-rate:
    docker:
      - image: cimg/base:stable
    resource_class: xlarge
    steps:
      - run:
          name: Install bc for calculations
          command: |
            sudo apt-get update && sudo apt-get install -y bc
      - run:
          name: Fetch Test Results from Artifacts
          command: |
            mkdir -p ~/test-results
            circleci-agent artifacts download --destination ~/test-results/
            tar -xzvf ~/test-results/*.tar.gz -C ~/test-results/
      - run:
          name: Calculate Combined Pass/Fail Rate
          command: |
            echo "Processing test results..."
            find ~/test-results -name '*.xml' -print
            
            TOTAL=0
            PASSED=0
            FAILED=0
            
            for FILE in ~/test-results/*.xml; do
              TESTS=$(grep -oP '(?<=tests=")[0-9]+' "$FILE" | head -1)
              FAILURES=$(grep -oP '(?<=failures=")[0-9]+' "$FILE" | head -1)
              ERRORS=$(grep -oP '(?<=errors=")[0-9]+' "$FILE" | head -1)
            
              TESTS=${TESTS:-0}
              FAILURES=${FAILURES:-0}
              ERRORS=${ERRORS:-0}
            
              PASSED_IN_FILE=$((TESTS - FAILURES - ERRORS))
            
              TOTAL=$((TOTAL + TESTS))
              PASSED=$((PASSED + PASSED_IN_FILE))
              FAILED=$((FAILED + FAILURES + ERRORS))
            done
            
            PASS_RATE=$(echo "scale=2; ($PASSED / $TOTAL) * 100" | bc)
            FAIL_RATE=$(echo "scale=2; ($FAILED / $TOTAL) * 100" | bc)

            echo "Total tests run: $TOTAL"
            echo "Passed: $PASSED"
            echo "Failed: $FAILED"
            echo "Combined Pass Rate: $PASS_RATE%"
            echo "Fail Rate: $FAIL_RATE%"
            
            echo "TOTAL=$TOTAL" >> $BASH_ENV
            echo "PASSED=$PASSED" >> $BASH_ENV
            echo "FAILED=$FAILED" >> $BASH_ENV
            echo "PASS_RATE=$PASS_RATE" >> $BASH_ENV
            echo "FAIL_RATE=$FAIL_RATE" >> $BASH_ENV
            source $BASH_ENV
            
            # Set environment variables for Slack notification
            export SLACK_MESSAGE="Total tests run: $TOTAL\nPassed: $PASSED\nFailed: $FAILED\nPass Rate: $PASS_RATE%\nFail Rate: $FAIL_RATE%"

#            if [ "$FAILED" -gt 0 ]; then
#              echo "Some tests failed."
#              exit 1  # Fails the job if any tests fail
#            fi
            
            # Send the test results to Slack
      - slack/notify:
          channel: "#test-alerts" # Replace with your Slack channel
          template: "${SLACK_MESSAGE}"
          event: always
          custom: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "Test Results:\nTotal: *${TOTAL:-N/A}*\n‚úÖ Passed: *${PASSED:-N/A}*\n‚ùå Failed: *${FAILED:-N/A}*\nüìä Pass Rate: *${PASS_RATE:-N/A}*\nüìâ Fail Rate: *${FAIL_RATE:-N/A}%*"
                  }
                }
              ]
            }
            

workflows:
  version: 2

  scheduled-test-1:
    triggers:
      - schedule:
          cron: "18 13 * * *"  # This will run nightly-build-and-test at 12:00 AM IST (6:30 PM UTC)   -- 30 18 * * * ahsan_dev  30 18
          filters:
            branches:
              only:
                - pass_fail_matrix
    jobs:
      - nightly-build-and-test-1
      - nightly-build-and-test-2
      - calculate-pass-fail-rate:
          requires:
            - nightly-build-and-test-1
            - nightly-build-and-test-2

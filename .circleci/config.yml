version: 2.1
executors:
  default-executor:
    docker:
      - image: cimg/base:stable
    working_directory: ~/workspace

jobs:
  build-and-test:
    docker:
      - image: cimg/base:stable
    resource_class: xlarge
    steps:
      - checkout
      - run:
          name: Install Java 22
          command: |
            sudo apt-get update && sudo apt-get install -y wget
            wget https://download.java.net/java/GA/jdk22/830ec9fcccef480bb3e73fb7ecafe059/36/GPL/openjdk-22_linux-x64_bin.tar.gz
            sudo mkdir -p /usr/lib/jvm
            sudo tar zxvf openjdk-22_linux-x64_bin.tar.gz -C /usr/lib/jvm
            sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk-22/bin/java 2200
            sudo update-alternatives --config java
            echo 'export PATH="/usr/lib/jvm/jdk-22/bin:$PATH"' >> $BASH_ENV
            source $BASH_ENV
            java -version
      - run:
          name: Install Maven
          command: |
            sudo apt-get install -y maven
            mvn -version
      - run:
          name: Install Chrome
          command: |
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
            sudo apt-get update
            sudo apt-get install -y google-chrome-stable
            google-chrome --version
      - run:
          name: Build and run tests
          command: mvn clean test "-Dsurefire.suiteXmlFiles=bvt.xml" "-Drun.headless=true" "-Dtest.env=uat"
      - store_artifacts:
          path: target/surefire-reports
          destination: build-and-test-artifacts
    executor:

  nightly-build-and-test-1:
    docker:
      - image: cimg/base:stable
    resource_class: xlarge
    steps:
      - checkout
      - run:
          name: Install Java 22
          command: |
            sudo apt-get update && sudo apt-get install -y wget
            wget https://download.java.net/java/GA/jdk22/830ec9fcccef480bb3e73fb7ecafe059/36/GPL/openjdk-22_linux-x64_bin.tar.gz
            sudo mkdir -p /usr/lib/jvm
            sudo tar zxvf openjdk-22_linux-x64_bin.tar.gz -C /usr/lib/jvm
            sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk-22/bin/java 2200
            sudo update-alternatives --config java
            echo 'export PATH="/usr/lib/jvm/jdk-22/bin:$PATH"' >> $BASH_ENV
            source $BASH_ENV
            java -version
      - run:
          name: Install Maven
          command: |
            sudo apt-get install -y maven
            mvn -version
      - run:
          name: Install Chrome
          command: |
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
            sudo apt-get update
            sudo apt-get install -y google-chrome-stable
            google-chrome --version
      - run:
          name: Build and run nightly tests
          command: mvn clean test "-Dsurefire.suiteXmlFiles=regression1.xml" "-Drun.headless=true" "-Dtest.env=uat"
      - store_artifacts:
          path: target/surefire-reports
          destination: nightly-build-and-test-1-reports
      - persist_to_workspace:
          root: .
          paths:
            - target/surefire-reports
    executor:

  nightly-build-and-test-2:
    docker:
      - image: cimg/base:stable
    resource_class: xlarge
    steps:
      - checkout
      - run:
          name: Install Java 22
          command: |
            sudo apt-get update && sudo apt-get install -y wget
            wget https://download.java.net/java/GA/jdk22/830ec9fcccef480bb3e73fb7ecafe059/36/GPL/openjdk-22_linux-x64_bin.tar.gz
            sudo mkdir -p /usr/lib/jvm
            sudo tar zxvf openjdk-22_linux-x64_bin.tar.gz -C /usr/lib/jvm
            sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk-22/bin/java 2200
            sudo update-alternatives --config java
            echo 'export PATH="/usr/lib/jvm/jdk-22/bin:$PATH"' >> $BASH_ENV
            source $BASH_ENV
            java -version
      - run:
          name: Install Maven
          command: |
            sudo apt-get install -y maven
            mvn -version
      - run:
          name: Install Chrome
          command: |
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
            sudo apt-get update
            sudo apt-get install -y google-chrome-stable
            google-chrome --version
      - run:
          name: Build and run nightly tests
          command: mvn clean test "-Dsurefire.suiteXmlFiles=regression2.xml" "-Drun.headless=true" "-Dtest.env=uat"
      - store_artifacts:
          path: target/surefire-reports
          destination: daily-build-and-test-artifacts
      - store_artifacts:
          path: target/surefire-reports
          destination: nightly-build-and-test-2-reports
      - persist_to_workspace:
          root: .
          paths:
            - target/surefire-reports
    executor:

  calculate-pass-fail-rate:
    executor: default-executor
    steps:
      - checkout
      - attach_workspace:
          at: /workspace
      - run:
          name: Process Test Results and Calculate Pass/Fail Rate
          command: |
            # Combine all surefire report files into a single directory
            cp -r /workspace/target/surefire-reports/* /tmp/surefire-reports
            
            # Calculate the pass and fail tests from the surefire reports
            FAILED_TESTS=$(grep -r 'Failed' /tmp/surefire-reports | wc -l)
            TOTAL_TESTS=$(grep -r 'Tests run:' /tmp/surefire-reports | wc -l)
            PASSED_TESTS=$((TOTAL_TESTS - FAILED_TESTS))
            
            # Calculate Pass Rate and Fail Rate
            PASS_RATE=$(echo "scale=2; ($PASSED_TESTS / $TOTAL_TESTS) * 100" | bc)
            FAIL_RATE=$(echo "scale=2; ($FAILED_TESTS / $TOTAL_TESTS) * 100" | bc)
            
            # Send Slack notification with the calculated rates
            curl -X POST -H 'Content-type: application/json' --data "{
              \"text\": \"*Test Execution Summary for ${PART} - ${TEST_ENV}*\",
              \"attachments\": [
                {
                  \"title\": \"Test Results\",
                  \"fields\": [
                    {\"title\": \"Total Tests\", \"value\": \"${TOTAL_TESTS}\", \"short\": true},
                    {\"title\": \"Passed\", \"value\": \"${PASSED_TESTS}\", \"short\": true},
                    {\"title\": \"Failed\", \"value\": \"${FAILED_TESTS}\", \"short\": true},
                    {\"title\": \"Pass Rate\", \"value\": \"${PASS_RATE}%\", \"short\": true},
                    {\"title\": \"Fail Rate\", \"value\": \"${FAIL_RATE}%\", \"short\": true}
                  ]
                }
              ]
            }" https://hooks.slack.com/services/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

workflows:
  version: 2
  build-and-test:
    jobs:
      - build-and-test

  scheduled-test-1:
    triggers:
      - schedule:
          cron: "13 12 * * *"  # This will run nightly-build-and-test at 12:00 AM IST (6:30 PM UTC)   -- 30 18 * * * ahsan_dev  30 18
          filters:
            branches:
              only:
                - pass_fail_matrix
    jobs:
      - nightly-build-and-test-1
      - nightly-build-and-test-2
      - calculate-pass-fail-rate:
          requires:
            - nightly-build-and-test-1
            - nightly-build-and-test-2

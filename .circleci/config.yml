version: 2.1

jobs:
#  build-and-test:
#    docker:
#      - image: cimg/base:stable
#    resource_class: xlarge
#    steps:
#      - checkout
#      - run:
#          name: Install Java 22
#          command: |
#            sudo apt-get update && sudo apt-get install -y wget
#            wget https://download.java.net/java/GA/jdk22/830ec9fcccef480bb3e73fb7ecafe059/36/GPL/openjdk-22_linux-x64_bin.tar.gz
#            sudo mkdir -p /usr/lib/jvm
#            sudo tar zxvf openjdk-22_linux-x64_bin.tar.gz -C /usr/lib/jvm
#            sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk-22/bin/java 2200
#            sudo update-alternatives --config java
#            echo 'export PATH="/usr/lib/jvm/jdk-22/bin:$PATH"' >> $BASH_ENV
#            source $BASH_ENV
#            java -version
#      - run:
#          name: Install Maven
#          command: |
#            sudo apt-get install -y maven
#            mvn -version
#      - run:
#          name: Install Chrome
#          command: |
#            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
#            sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
#            sudo apt-get update
#            sudo apt-get install -y google-chrome-stable
#            google-chrome --version
#      - run:
#          name: Build and run tests
#          command: mvn clean test "-Dsurefire.suiteXmlFiles=bvt.xml" "-Drun.headless=true" "-Dtest.env=uat"
#      - store_artifacts:
#          path: target/surefire-reports
#          destination: build-and-test-artifacts
#    executor:

  nightly-build-and-test-1:
    docker:
      - image: cimg/base:stable
    resource_class: xlarge
    steps:
      - checkout
      - run:
          name: Install Java 22
          command: |
            sudo apt-get update && sudo apt-get install -y wget
            wget https://download.java.net/java/GA/jdk22/830ec9fcccef480bb3e73fb7ecafe059/36/GPL/openjdk-22_linux-x64_bin.tar.gz
            sudo mkdir -p /usr/lib/jvm
            sudo tar zxvf openjdk-22_linux-x64_bin.tar.gz -C /usr/lib/jvm
            sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk-22/bin/java 2200
            sudo update-alternatives --config java
            echo 'export PATH="/usr/lib/jvm/jdk-22/bin:$PATH"' >> $BASH_ENV
            source $BASH_ENV
            java -version
      - run:
          name: Install Maven
          command: |
            sudo apt-get install -y maven
            mvn -version
      - run:
          name: Install Chrome
          command: |
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
            sudo apt-get update
            sudo apt-get install -y google-chrome-stable
            google-chrome --version
      - run:
          name: Build and run nightly tests
          command: mvn clean test "-Dsurefire.suiteXmlFiles=regression1.xml" "-Drun.headless=true" "-Dtest.env=uat"
      - store_artifacts:
          path: target/surefire-reports
          destination: nightly-build-and-test-artifacts-1
      - run:
          name: Prepare workspace directory
          command: mkdir -p /workspace
            - persist_to_workspace:
                root: target/surefire-reports
                paths:
                  - TEST-*.xml
    executor:

  nightly-build-and-test-2:
    docker:
      - image: cimg/base:stable
    resource_class: xlarge
    steps:
      - checkout
      - run:
          name: Install Java 22
          command: |
            sudo apt-get update && sudo apt-get install -y wget
            wget https://download.java.net/java/GA/jdk22/830ec9fcccef480bb3e73fb7ecafe059/36/GPL/openjdk-22_linux-x64_bin.tar.gz
            sudo mkdir -p /usr/lib/jvm
            sudo tar zxvf openjdk-22_linux-x64_bin.tar.gz -C /usr/lib/jvm
            sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk-22/bin/java 2200
            sudo update-alternatives --config java
            echo 'export PATH="/usr/lib/jvm/jdk-22/bin:$PATH"' >> $BASH_ENV
            source $BASH_ENV
            java -version
      - run:
          name: Install Maven
          command: |
            sudo apt-get install -y maven
            mvn -version
      - run:
          name: Install Chrome
          command: |
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
            sudo apt-get update
            sudo apt-get install -y google-chrome-stable
            google-chrome --version
      - run:
          name: Build and run nightly tests
          command: mvn clean test "-Dsurefire.suiteXmlFiles=regression2.xml" "-Drun.headless=true" "-Dtest.env=uat"
      - store_artifacts:
          path: target/surefire-reports
          destination: nightly-build-and-test-artifacts-2
      - run:
          name: Prepare workspace directory
          command: mkdir -p /workspace
            - persist_to_workspace:
                root: target/surefire-reports
                paths:
                  - TEST-*.xml
    executor:

  calculate-pass-fail-rate:
    docker:
      - image: cimg/base:stable
    resource_class: xlarge
    steps:
      - attach_workspace:
          at: /workspace
      - run:
          name: Debug Workspace Contents
          command: ls -R /workspace
      - run:
          name: Calculate Combined Pass/Fail Rate
          command: |
            echo "Processing test results from workspace..."
            find /workspace -name 'TEST-*.xml' -print
            PASS1=$(grep -oP '(?<=<testsuite tests=")[^"]*(?=".*errors="0")' /workspace/TEST-*.xml | wc -l)
            TOTAL1=$(grep -oP '(?<=<testsuite tests=")[^"]*' /workspace/TEST-*.xml | awk '{s+=$1} END {print s}')
            
            PASS=${PASS1}
            TOTAL=${TOTAL1}
            FAIL=$(($TOTAL - $PASS))
            RATE=$(echo "scale=2; ($PASS / $TOTAL) * 100" | bc)
            
            echo "Total tests run: $TOTAL, Passed: $PASS, Failed: $FAIL, Combined Pass rate: $RATE%"

#  nightly-build-and-test-3:
#    docker:
#      - image: cimg/base:stable
#    resource_class: xlarge
#    steps:
#      - checkout
#      - run:
#          name: Install Java 22
#          command: |
#            sudo apt-get update && sudo apt-get install -y wget
#            wget https://download.java.net/java/GA/jdk22/830ec9fcccef480bb3e73fb7ecafe059/36/GPL/openjdk-22_linux-x64_bin.tar.gz
#            sudo mkdir -p /usr/lib/jvm
#            sudo tar zxvf openjdk-22_linux-x64_bin.tar.gz -C /usr/lib/jvm
#            sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk-22/bin/java 2200
#            sudo update-alternatives --config java
#            echo 'export PATH="/usr/lib/jvm/jdk-22/bin:$PATH"' >> $BASH_ENV
#            source $BASH_ENV
#            java -version
#      - run:
#          name: Install Maven
#          command: |
#            sudo apt-get install -y maven
#            mvn -version
#      - run:
#          name: Build and run nightly tests
#          command: mvn clean test "-Dsurefire.suiteXmlFiles=regression9.xml" "-Drun.headless=true" "-Dtest.env=uat"
#      - store_artifacts:
#          path: target/surefire-reports
#          destination: nightly-build-and-test-artifacts
#    executor:

workflows:
  version: 2
#  build-and-test:
#    jobs:
#      - build-and-test

  scheduled-test-1:
    triggers:
      - schedule:
          cron: "11 10 * * *"  # This will run nightly-build-and-test at 12:00 AM IST (6:30 PM UTC)   -- 30 18 * * * ahsan_dev  30 18
          filters:
            branches:
              only:
                - pass_fail_matrix
    jobs:
      - nightly-build-and-test-1
      - nightly-build-and-test-2
      - calculate-pass-fail-rate:
          requires:
            - nightly-build-and-test-1
            - nightly-build-and-test-2

#  scheduled-test-2:
#    triggers:
#      - schedule:
#          cron: "52 06 * * *"  # This will run nightly-build-and-test at 12:00 AM IST (6:30 PM UTC)   -- 30 18 * * * ahsan_dev  30 18
#          filters:
#            branches:
#              only:
#                - pass_fail_matrix
#    jobs:
#      - nightly-build-and-test-3
version: 2.1
orbs:
  slack: circleci/slack@5.1.1

jobs:
  build-and-test:
    docker:
      - image: cimg/base:stable
    resource_class: xlarge
    steps:
      - checkout
      - run:
          name: Install Java 22
          command: |
            sudo apt-get update && sudo apt-get install -y wget
            wget https://download.java.net/java/GA/jdk22/830ec9fcccef480bb3e73fb7ecafe059/36/GPL/openjdk-22_linux-x64_bin.tar.gz
            sudo mkdir -p /usr/lib/jvm
            sudo tar zxvf openjdk-22_linux-x64_bin.tar.gz -C /usr/lib/jvm
            sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk-22/bin/java 2200
            sudo update-alternatives --config java
            echo 'export PATH="/usr/lib/jvm/jdk-22/bin:$PATH"' >> $BASH_ENV
            source $BASH_ENV
            java -version
      - run:
          name: Install Maven
          command: |
            sudo apt-get install -y maven
            mvn -version
      - run:
          name: Install Chrome
          command: |
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
            sudo apt-get update
            sudo apt-get install -y google-chrome-stable
            google-chrome --version
      - run:
          name: Build and run tests
          command: mvn clean test "-Dsurefire.suiteXmlFiles=bvt.xml" "-Drun.headless=true" "-Dtest.env=uat"
      - store_artifacts:
          path: target/surefire-reports
          destination: build-and-test-artifacts
    executor:

  nightly-build-and-test-1:
    docker:
      - image: cimg/base:stable
    resource_class: xlarge
    steps:
      - checkout
      - run:
          name: Install Java 22
          command: |
            sudo apt-get update && sudo apt-get install -y wget
            wget https://download.java.net/java/GA/jdk22/830ec9fcccef480bb3e73fb7ecafe059/36/GPL/openjdk-22_linux-x64_bin.tar.gz
            sudo mkdir -p /usr/lib/jvm
            sudo tar zxvf openjdk-22_linux-x64_bin.tar.gz -C /usr/lib/jvm
            sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk-22/bin/java 2200
            sudo update-alternatives --config java
            echo 'export PATH="/usr/lib/jvm/jdk-22/bin:$PATH"' >> $BASH_ENV
            source $BASH_ENV
            java -version
      - run:
          name: Install Maven
          command: |
            sudo apt-get install -y maven
            mvn -version
      - run:
          name: Install Chrome
          command: |
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
            sudo apt-get update
            sudo apt-get install -y google-chrome-stable
            google-chrome --version
      - run:
          name: Build and run nightly tests
          command: mvn clean test "-Dsurefire.suiteXmlFiles=regression1.xml" "-Drun.headless=true" "-Dtest.env=uat" || true
      - store_artifacts:
          path: target/surefire-reports
          destination: daily-build-and-test-artifacts-1
      - run:
          name: Verify Test Results Exist
          command: ls -R target/surefire-reports || echo "Test results missing!"
      - run:
          name: Copy test results to workspace
          command: |
            mkdir -p ~/workspace
            for file in target/surefire-reports/TEST-*.xml; do
              [ -f "$file" ] && cp "$file" ~/workspace/nightly-build-and-test-1_$(basename "$file")
            done
      - persist_to_workspace:
          root: ~/workspace
          paths:
            - nightly-build-and-test-1_TEST-*.xml
    executor:

  nightly-build-and-test-2:
    docker:
      - image: cimg/base:stable
    resource_class: xlarge
    steps:
      - checkout
      - run:
          name: Install Java 22
          command: |
            sudo apt-get update && sudo apt-get install -y wget
            wget https://download.java.net/java/GA/jdk22/830ec9fcccef480bb3e73fb7ecafe059/36/GPL/openjdk-22_linux-x64_bin.tar.gz
            sudo mkdir -p /usr/lib/jvm
            sudo tar zxvf openjdk-22_linux-x64_bin.tar.gz -C /usr/lib/jvm
            sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk-22/bin/java 2200
            sudo update-alternatives --config java
            echo 'export PATH="/usr/lib/jvm/jdk-22/bin:$PATH"' >> $BASH_ENV
            source $BASH_ENV
            java -version
      - run:
          name: Install Maven
          command: |
            sudo apt-get install -y maven
            mvn -version
      - run:
          name: Install Chrome
          command: |
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
            sudo apt-get update
            sudo apt-get install -y google-chrome-stable
            google-chrome --version
      - run:
          name: Build and run nightly tests
          command: mvn clean test "-Dsurefire.suiteXmlFiles=regression2.xml" "-Drun.headless=true" "-Dtest.env=uat" || true
      - store_artifacts:
          path: target/surefire-reports
          destination: daily-build-and-test-artifacts-2
      - run:
          name: Verify Test Results Exist
          command: ls -R target/surefire-reports || echo "Test results missing!"
      - run:
          name: Copy test results to workspace
          command: |
            mkdir -p ~/workspace
            for file in target/surefire-reports/TEST-*.xml; do
              [ -f "$file" ] && cp "$file" ~/workspace/nightly-build-and-test-2_$(basename "$file")
            done
      - persist_to_workspace:
          root: ~/workspace
          paths:
            - nightly-build-and-test-2_TEST-*.xml
    executor:

  nightly-build-and-test-3:
    docker:
      - image: cimg/base:stable
    resource_class: xlarge
    steps:
      - checkout
      - run:
          name: Install Java 22
          command: |
            sudo apt-get update && sudo apt-get install -y wget
            wget https://download.java.net/java/GA/jdk22/830ec9fcccef480bb3e73fb7ecafe059/36/GPL/openjdk-22_linux-x64_bin.tar.gz
            sudo mkdir -p /usr/lib/jvm
            sudo tar zxvf openjdk-22_linux-x64_bin.tar.gz -C /usr/lib/jvm
            sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk-22/bin/java 2200
            sudo update-alternatives --config java
            echo 'export PATH="/usr/lib/jvm/jdk-22/bin:$PATH"' >> $BASH_ENV
            source $BASH_ENV
            java -version
      - run:
          name: Install Maven
          command: |
            sudo apt-get install -y maven
            mvn -version
      - run:
          name: Install Chrome
          command: |
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
            sudo apt-get update
            sudo apt-get install -y google-chrome-stable
            google-chrome --version
      - run:
          name: Build and run nightly tests
          command: mvn clean test "-Dsurefire.suiteXmlFiles=regression3.xml" "-Drun.headless=true" "-Dtest.env=uat" || true
      - store_artifacts:
          path: target/surefire-reports
          destination: daily-build-and-test-artifacts-3
      - run:
          name: Verify Test Results Exist
          command: ls -R target/surefire-reports || echo "Test results missing!"
      - run:
          name: Copy test results to workspace
          command: |
            mkdir -p ~/workspace
            for file in target/surefire-reports/TEST-*.xml; do
              [ -f "$file" ] && cp "$file" ~/workspace/nightly-build-and-test-3_$(basename "$file")
            done
      - persist_to_workspace:
          root: ~/workspace
          paths:
            - nightly-build-and-test-3_TEST-*.xml
    executor:

  nightly-build-and-test-4:
    docker:
      - image: cimg/base:stable
    resource_class: xlarge
    steps:
      - checkout
      - run:
          name: Install Java 22
          command: |
            sudo apt-get update && sudo apt-get install -y wget
            wget https://download.java.net/java/GA/jdk22/830ec9fcccef480bb3e73fb7ecafe059/36/GPL/openjdk-22_linux-x64_bin.tar.gz
            sudo mkdir -p /usr/lib/jvm
            sudo tar zxvf openjdk-22_linux-x64_bin.tar.gz -C /usr/lib/jvm
            sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk-22/bin/java 2200
            sudo update-alternatives --config java
            echo 'export PATH="/usr/lib/jvm/jdk-22/bin:$PATH"' >> $BASH_ENV
            source $BASH_ENV
            java -version
      - run:
          name: Install Maven
          command: |
            sudo apt-get install -y maven
            mvn -version
      - run:
          name: Install Chrome
          command: |
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
            sudo apt-get update
            sudo apt-get install -y google-chrome-stable
            google-chrome --version
      - run:
          name: Build and run nightly tests
          command: mvn clean test "-Dsurefire.suiteXmlFiles=regression4.xml" "-Drun.headless=true" "-Dtest.env=uat" || true
      - store_artifacts:
          path: target/surefire-reports
          destination: daily-build-and-test-artifacts-4
      - run:
          name: Verify Test Results Exist
          command: ls -R target/surefire-reports || echo "Test results missing!"
      - run:
          name: Copy test results to workspace
          command: |
            mkdir -p ~/workspace
            for file in target/surefire-reports/TEST-*.xml; do
              [ -f "$file" ] && cp "$file" ~/workspace/nightly-build-and-test-4_$(basename "$file")
            done
      - persist_to_workspace:
          root: ~/workspace
          paths:
            - nightly-build-and-test-4_TEST-*.xml
    executor:

  nightly-build-and-test-5:
    docker:
      - image: cimg/base:stable
    resource_class: xlarge
    steps:
      - checkout
      - run:
          name: Install Java 22
          command: |
            sudo apt-get update && sudo apt-get install -y wget
            wget https://download.java.net/java/GA/jdk22/830ec9fcccef480bb3e73fb7ecafe059/36/GPL/openjdk-22_linux-x64_bin.tar.gz
            sudo mkdir -p /usr/lib/jvm
            sudo tar zxvf openjdk-22_linux-x64_bin.tar.gz -C /usr/lib/jvm
            sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk-22/bin/java 2200
            sudo update-alternatives --config java
            echo 'export PATH="/usr/lib/jvm/jdk-22/bin:$PATH"' >> $BASH_ENV
            source $BASH_ENV
            java -version
      - run:
          name: Install Maven
          command: |
            sudo apt-get install -y maven
            mvn -version
      - run:
          name: Install Chrome
          command: |
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
            sudo apt-get update
            sudo apt-get install -y google-chrome-stable
            google-chrome --version
      - run:
          name: Build and run nightly tests
          command: mvn clean test "-Dsurefire.suiteXmlFiles=regression5.xml" "-Drun.headless=true" "-Dtest.env=uat" || true
      - store_artifacts:
          path: target/surefire-reports
          destination: daily-build-and-test-artifacts-5
      - run:
          name: Verify Test Results Exist
          command: ls -R target/surefire-reports || echo "Test results missing!"
      - run:
          name: Copy test results to workspace
          command: |
            mkdir -p ~/workspace
            for file in target/surefire-reports/TEST-*.xml; do
              [ -f "$file" ] && cp "$file" ~/workspace/nightly-build-and-test-5_$(basename "$file")
            done
      - persist_to_workspace:
          root: ~/workspace
          paths:
            - nightly-build-and-test-5_TEST-*.xml
    executor:

  nightly-build-and-test-6:
    docker:
      - image: cimg/base:stable
    resource_class: xlarge
    steps:
      - checkout
      - run:
          name: Install Java 22
          command: |
            sudo apt-get update && sudo apt-get install -y wget
            wget https://download.java.net/java/GA/jdk22/830ec9fcccef480bb3e73fb7ecafe059/36/GPL/openjdk-22_linux-x64_bin.tar.gz
            sudo mkdir -p /usr/lib/jvm
            sudo tar zxvf openjdk-22_linux-x64_bin.tar.gz -C /usr/lib/jvm
            sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk-22/bin/java 2200
            sudo update-alternatives --config java
            echo 'export PATH="/usr/lib/jvm/jdk-22/bin:$PATH"' >> $BASH_ENV
            source $BASH_ENV
            java -version
      - run:
          name: Install Maven
          command: |
            sudo apt-get install -y maven
            mvn -version
      - run:
          name: Install Chrome
          command: |
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
            sudo apt-get update
            sudo apt-get install -y google-chrome-stable
            google-chrome --version
      - run:
          name: Build and run nightly tests
          command: mvn clean test "-Dsurefire.suiteXmlFiles=regression6.xml" "-Drun.headless=true" "-Dtest.env=uat" || true
      - store_artifacts:
          path: target/surefire-reports
          destination: daily-build-and-test-artifacts-6
      - run:
          name: Verify Test Results Exist
          command: ls -R target/surefire-reports || echo "Test results missing!"
      - run:
          name: Copy test results to workspace
          command: |
            mkdir -p ~/workspace
            for file in target/surefire-reports/TEST-*.xml; do
              [ -f "$file" ] && cp "$file" ~/workspace/nightly-build-and-test-6_$(basename "$file")
            done
      - persist_to_workspace:
          root: ~/workspace
          paths:
            - nightly-build-and-test-6_TEST-*.xml
    executor:

  nightly-build-and-test-7:
    docker:
      - image: cimg/base:stable
    resource_class: xlarge
    steps:
      - checkout
      - run:
          name: Install Java 22
          command: |
            sudo apt-get update && sudo apt-get install -y wget
            wget https://download.java.net/java/GA/jdk22/830ec9fcccef480bb3e73fb7ecafe059/36/GPL/openjdk-22_linux-x64_bin.tar.gz
            sudo mkdir -p /usr/lib/jvm
            sudo tar zxvf openjdk-22_linux-x64_bin.tar.gz -C /usr/lib/jvm
            sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk-22/bin/java 2200
            sudo update-alternatives --config java
            echo 'export PATH="/usr/lib/jvm/jdk-22/bin:$PATH"' >> $BASH_ENV
            source $BASH_ENV
            java -version
      - run:
          name: Install Maven
          command: |
            sudo apt-get install -y maven
            mvn -version
      - run:
          name: Install Chrome
          command: |
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
            sudo apt-get update
            sudo apt-get install -y google-chrome-stable
            google-chrome --version
      - run:
          name: Build and run nightly tests
          command: mvn clean test "-Dsurefire.suiteXmlFiles=regression7.xml" "-Drun.headless=true" "-Dtest.env=uat" || true
      - store_artifacts:
          path: target/surefire-reports
          destination: daily-build-and-test-artifacts-7
      - run:
          name: Verify Test Results Exist
          command: ls -R target/surefire-reports || echo "Test results missing!"
      - run:
          name: Copy test results to workspace
          command: |
            mkdir -p ~/workspace
            for file in target/surefire-reports/TEST-*.xml; do
              [ -f "$file" ] && cp "$file" ~/workspace/nightly-build-and-test-7_$(basename "$file")
            done
      - persist_to_workspace:
          root: ~/workspace
          paths:
            - nightly-build-and-test-7_TEST-*.xml
    executor:

  nightly-build-and-test-8:
    docker:
      - image: cimg/base:stable
    resource_class: xlarge
    steps:
      - checkout
      - run:
          name: Install Java 22
          command: |
            sudo apt-get update && sudo apt-get install -y wget
            wget https://download.java.net/java/GA/jdk22/830ec9fcccef480bb3e73fb7ecafe059/36/GPL/openjdk-22_linux-x64_bin.tar.gz
            sudo mkdir -p /usr/lib/jvm
            sudo tar zxvf openjdk-22_linux-x64_bin.tar.gz -C /usr/lib/jvm
            sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk-22/bin/java 2200
            sudo update-alternatives --config java
            echo 'export PATH="/usr/lib/jvm/jdk-22/bin:$PATH"' >> $BASH_ENV
            source $BASH_ENV
            java -version
      - run:
          name: Install Maven
          command: |
            sudo apt-get install -y maven
            mvn -version
      - run:
          name: Install Chrome
          command: |
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
            sudo apt-get update
            sudo apt-get install -y google-chrome-stable
            google-chrome --version
      - run:
          name: Build and run nightly tests
          command: mvn clean test "-Dsurefire.suiteXmlFiles=regression8.xml" "-Drun.headless=true" "-Dtest.env=uat" || true
      - store_artifacts:
          path: target/surefire-reports
          destination: daily-build-and-test-artifacts-8
      - run:
          name: Verify Test Results Exist
          command: ls -R target/surefire-reports || echo "Test results missing!"
      - run:
          name: Copy test results to workspace
          command: |
            mkdir -p ~/workspace
            for file in target/surefire-reports/TEST-*.xml; do
              [ -f "$file" ] && cp "$file" ~/workspace/nightly-build-and-test-8_$(basename "$file")
            done
      - persist_to_workspace:
          root: ~/workspace
          paths:
            - nightly-build-and-test-8_TEST-*.xml
    executor:

  daily-build-and-test-1:
    docker:
      - image: cimg/base:stable
    resource_class: xlarge
    steps:
      - checkout
      - run:
          name: Install Java 22
          command: |
            sudo apt-get update && sudo apt-get install -y wget
            wget https://download.java.net/java/GA/jdk22/830ec9fcccef480bb3e73fb7ecafe059/36/GPL/openjdk-22_linux-x64_bin.tar.gz
            sudo mkdir -p /usr/lib/jvm
            sudo tar zxvf openjdk-22_linux-x64_bin.tar.gz -C /usr/lib/jvm
            sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk-22/bin/java 2200
            sudo update-alternatives --config java
            echo 'export PATH="/usr/lib/jvm/jdk-22/bin:$PATH"' >> $BASH_ENV
            source $BASH_ENV
            java -version
      - run:
          name: Install Maven
          command: |
            sudo apt-get install -y maven
            mvn -version
      - run:
          name: Install Chrome
          command: |
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
            sudo apt-get update
            sudo apt-get install -y google-chrome-stable
            google-chrome --version
      - run:
          name: Build and run daily tests
          command: mvn clean test "-Dsurefire.suiteXmlFiles=regression1.xml" "-Drun.headless=true" "-Dtest.env=uat" "-Dcreate.cycle=true" || true
      - store_artifacts:
          path: target/surefire-reports
          destination: daily-build-and-test-artifacts-1
      - run:
          name: Verify Test Results Exist
          command: ls -R target/surefire-reports || echo "Test results missing!"
      - run:
          name: Copy test results to workspace
          command: |
            mkdir -p ~/workspace
            for file in target/surefire-reports/TEST-*.xml; do
              [ -f "$file" ] && cp "$file" ~/workspace/daily-build-and-test-1_$(basename "$file")
            done
      - persist_to_workspace:
          root: ~/workspace
          paths:
            - daily-build-and-test-1_TEST-*.xml
    executor:

  daily-build-and-test-2:
    docker:
      - image: cimg/base:stable
    resource_class: xlarge
    steps:
      - checkout
      - run:
          name: Install Java 22
          command: |
            sudo apt-get update && sudo apt-get install -y wget
            wget https://download.java.net/java/GA/jdk22/830ec9fcccef480bb3e73fb7ecafe059/36/GPL/openjdk-22_linux-x64_bin.tar.gz
            sudo mkdir -p /usr/lib/jvm
            sudo tar zxvf openjdk-22_linux-x64_bin.tar.gz -C /usr/lib/jvm
            sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk-22/bin/java 2200
            sudo update-alternatives --config java
            echo 'export PATH="/usr/lib/jvm/jdk-22/bin:$PATH"' >> $BASH_ENV
            source $BASH_ENV
            java -version
      - run:
          name: Install Maven
          command: |
            sudo apt-get install -y maven
            mvn -version
      - run:
          name: Install Chrome
          command: |
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
            sudo apt-get update
            sudo apt-get install -y google-chrome-stable
            google-chrome --version
      - run:
          name: Build and run daily tests
          command: mvn clean test "-Dsurefire.suiteXmlFiles=regression2.xml" "-Drun.headless=true" "-Dtest.env=uat" "-Dcreate.cycle=true" || true
      - store_artifacts:
          path: target/surefire-reports
          destination: daily-build-and-test-artifacts-2
      - run:
          name: Verify Test Results Exist
          command: ls -R target/surefire-reports || echo "Test results missing!"
      - run:
          name: Copy test results to workspace
          command: |
            mkdir -p ~/workspace
            for file in target/surefire-reports/TEST-*.xml; do
              [ -f "$file" ] && cp "$file" ~/workspace/daily-build-and-test-2_$(basename "$file")
            done
      - persist_to_workspace:
          root: ~/workspace
          paths:
            - daily-build-and-test-2_TEST-*.xml
    executor:

  daily-build-and-test-3:
    docker:
      - image: cimg/base:stable
    resource_class: xlarge
    steps:
      - checkout
      - run:
          name: Install Java 22
          command: |
            sudo apt-get update && sudo apt-get install -y wget
            wget https://download.java.net/java/GA/jdk22/830ec9fcccef480bb3e73fb7ecafe059/36/GPL/openjdk-22_linux-x64_bin.tar.gz
            sudo mkdir -p /usr/lib/jvm
            sudo tar zxvf openjdk-22_linux-x64_bin.tar.gz -C /usr/lib/jvm
            sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk-22/bin/java 2200
            sudo update-alternatives --config java
            echo 'export PATH="/usr/lib/jvm/jdk-22/bin:$PATH"' >> $BASH_ENV
            source $BASH_ENV
            java -version
      - run:
          name: Install Maven
          command: |
            sudo apt-get install -y maven
            mvn -version
      - run:
          name: Install Chrome
          command: |
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
            sudo apt-get update
            sudo apt-get install -y google-chrome-stable
            google-chrome --version
      - run:
          name: Build and run daily tests
          command: mvn clean test "-Dsurefire.suiteXmlFiles=regression3.xml" "-Drun.headless=true" "-Dtest.env=uat" "-Dcreate.cycle=true" || true
      - store_artifacts:
          path: target/surefire-reports
          destination: daily-build-and-test-artifacts-3
      - run:
          name: Verify Test Results Exist
          command: ls -R target/surefire-reports || echo "Test results missing!"
      - run:
          name: Copy test results to workspace
          command: |
            mkdir -p ~/workspace
            for file in target/surefire-reports/TEST-*.xml; do
              [ -f "$file" ] && cp "$file" ~/workspace/daily-build-and-test-3_$(basename "$file")
            done
      - persist_to_workspace:
          root: ~/workspace
          paths:
            - daily-build-and-test-3_TEST-*.xml
    executor:

  daily-build-and-test-4:
    docker:
      - image: cimg/base:stable
    resource_class: xlarge
    steps:
      - checkout
      - run:
          name: Install Java 22
          command: |
            sudo apt-get update && sudo apt-get install -y wget
            wget https://download.java.net/java/GA/jdk22/830ec9fcccef480bb3e73fb7ecafe059/36/GPL/openjdk-22_linux-x64_bin.tar.gz
            sudo mkdir -p /usr/lib/jvm
            sudo tar zxvf openjdk-22_linux-x64_bin.tar.gz -C /usr/lib/jvm
            sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk-22/bin/java 2200
            sudo update-alternatives --config java
            echo 'export PATH="/usr/lib/jvm/jdk-22/bin:$PATH"' >> $BASH_ENV
            source $BASH_ENV
            java -version
      - run:
          name: Install Maven
          command: |
            sudo apt-get install -y maven
            mvn -version
      - run:
          name: Install Chrome
          command: |
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
            sudo apt-get update
            sudo apt-get install -y google-chrome-stable
            google-chrome --version
      - run:
          name: Build and run daily tests
          command: mvn clean test "-Dsurefire.suiteXmlFiles=regression4.xml" "-Drun.headless=true" "-Dtest.env=uat" "-Dcreate.cycle=true" || true
      - store_artifacts:
          path: target/surefire-reports
          destination: daily-build-and-test-artifacts-4
      - run:
          name: Verify Test Results Exist
          command: ls -R target/surefire-reports || echo "Test results missing!"
      - run:
          name: Copy test results to workspace
          command: |
            mkdir -p ~/workspace
            for file in target/surefire-reports/TEST-*.xml; do
              [ -f "$file" ] && cp "$file" ~/workspace/daily-build-and-test-4_$(basename "$file")
            done
      - persist_to_workspace:
          root: ~/workspace
          paths:
            - daily-build-and-test-4_TEST-*.xml
    executor:

  daily-build-and-test-5:
    docker:
      - image: cimg/base:stable
    resource_class: xlarge
    steps:
      - checkout
      - run:
          name: Install Java 22
          command: |
            sudo apt-get update && sudo apt-get install -y wget
            wget https://download.java.net/java/GA/jdk22/830ec9fcccef480bb3e73fb7ecafe059/36/GPL/openjdk-22_linux-x64_bin.tar.gz
            sudo mkdir -p /usr/lib/jvm
            sudo tar zxvf openjdk-22_linux-x64_bin.tar.gz -C /usr/lib/jvm
            sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk-22/bin/java 2200
            sudo update-alternatives --config java
            echo 'export PATH="/usr/lib/jvm/jdk-22/bin:$PATH"' >> $BASH_ENV
            source $BASH_ENV
            java -version
      - run:
          name: Install Maven
          command: |
            sudo apt-get install -y maven
            mvn -version
      - run:
          name: Install Chrome
          command: |
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
            sudo apt-get update
            sudo apt-get install -y google-chrome-stable
            google-chrome --version
      - run:
          name: Build and run daily tests
          command: mvn clean test "-Dsurefire.suiteXmlFiles=regression5.xml" "-Drun.headless=true" "-Dtest.env=uat" "-Dcreate.cycle=true" || true
      - store_artifacts:
          path: target/surefire-reports
          destination: daily-build-and-test-artifacts-5
      - run:
          name: Verify Test Results Exist
          command: ls -R target/surefire-reports || echo "Test results missing!"
      - run:
          name: Copy test results to workspace
          command: |
            mkdir -p ~/workspace
            for file in target/surefire-reports/TEST-*.xml; do
              [ -f "$file" ] && cp "$file" ~/workspace/daily-build-and-test-5_$(basename "$file")
            done
      - persist_to_workspace:
          root: ~/workspace
          paths:
            - daily-build-and-test-5_TEST-*.xml
    executor:

  daily-build-and-test-6:
    docker:
      - image: cimg/base:stable
    resource_class: xlarge
    steps:
      - checkout
      - run:
          name: Install Java 22
          command: |
            sudo apt-get update && sudo apt-get install -y wget
            wget https://download.java.net/java/GA/jdk22/830ec9fcccef480bb3e73fb7ecafe059/36/GPL/openjdk-22_linux-x64_bin.tar.gz
            sudo mkdir -p /usr/lib/jvm
            sudo tar zxvf openjdk-22_linux-x64_bin.tar.gz -C /usr/lib/jvm
            sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk-22/bin/java 2200
            sudo update-alternatives --config java
            echo 'export PATH="/usr/lib/jvm/jdk-22/bin:$PATH"' >> $BASH_ENV
            source $BASH_ENV
            java -version
      - run:
          name: Install Maven
          command: |
            sudo apt-get install -y maven
            mvn -version
      - run:
          name: Install Chrome
          command: |
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
            sudo apt-get update
            sudo apt-get install -y google-chrome-stable
            google-chrome --version
      - run:
          name: Build and run daily tests
          command: mvn clean test "-Dsurefire.suiteXmlFiles=regression6.xml" "-Drun.headless=true" "-Dtest.env=uat" "-Dcreate.cycle=true" || true
      - store_artifacts:
          path: target/surefire-reports
          destination: daily-build-and-test-artifacts-6
      - run:
          name: Verify Test Results Exist
          command: ls -R target/surefire-reports || echo "Test results missing!"
      - run:
          name: Copy test results to workspace
          command: |
            mkdir -p ~/workspace
            for file in target/surefire-reports/TEST-*.xml; do
              [ -f "$file" ] && cp "$file" ~/workspace/daily-build-and-test-6_$(basename "$file")
            done
      - persist_to_workspace:
          root: ~/workspace
          paths:
            - daily-build-and-test-6_TEST-*.xml
    executor:

  daily-build-and-test-7:
    docker:
      - image: cimg/base:stable
    resource_class: xlarge
    steps:
      - checkout
      - run:
          name: Install Java 22
          command: |
            sudo apt-get update && sudo apt-get install -y wget
            wget https://download.java.net/java/GA/jdk22/830ec9fcccef480bb3e73fb7ecafe059/36/GPL/openjdk-22_linux-x64_bin.tar.gz
            sudo mkdir -p /usr/lib/jvm
            sudo tar zxvf openjdk-22_linux-x64_bin.tar.gz -C /usr/lib/jvm
            sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk-22/bin/java 2200
            sudo update-alternatives --config java
            echo 'export PATH="/usr/lib/jvm/jdk-22/bin:$PATH"' >> $BASH_ENV
            source $BASH_ENV
            java -version
      - run:
          name: Install Maven
          command: |
            sudo apt-get install -y maven
            mvn -version
      - run:
          name: Install Chrome
          command: |
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
            sudo apt-get update
            sudo apt-get install -y google-chrome-stable
            google-chrome --version
      - run:
          name: Build and run daily tests
          command: mvn clean test "-Dsurefire.suiteXmlFiles=regression7.xml" "-Drun.headless=true" "-Dtest.env=uat" "-Dcreate.cycle=true" || true
      - store_artifacts:
          path: target/surefire-reports
          destination: daily-build-and-test-artifacts-7
      - run:
          name: Verify Test Results Exist
          command: ls -R target/surefire-reports || echo "Test results missing!"
      - run:
          name: Copy test results to workspace
          command: |
            mkdir -p ~/workspace
            for file in target/surefire-reports/TEST-*.xml; do
              [ -f "$file" ] && cp "$file" ~/workspace/daily-build-and-test-7_$(basename "$file")
            done
      - persist_to_workspace:
          root: ~/workspace
          paths:
            - daily-build-and-test-7_TEST-*.xml
    executor:

  daily-build-and-test-8:
    docker:
      - image: cimg/base:stable
    resource_class: xlarge
    steps:
      - checkout
      - run:
          name: Install Java 22
          command: |
            sudo apt-get update && sudo apt-get install -y wget
            wget https://download.java.net/java/GA/jdk22/830ec9fcccef480bb3e73fb7ecafe059/36/GPL/openjdk-22_linux-x64_bin.tar.gz
            sudo mkdir -p /usr/lib/jvm
            sudo tar zxvf openjdk-22_linux-x64_bin.tar.gz -C /usr/lib/jvm
            sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk-22/bin/java 2200
            sudo update-alternatives --config java
            echo 'export PATH="/usr/lib/jvm/jdk-22/bin:$PATH"' >> $BASH_ENV
            source $BASH_ENV
            java -version
      - run:
          name: Install Maven
          command: |
            sudo apt-get install -y maven
            mvn -version
      - run:
          name: Install Chrome
          command: |
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
            sudo apt-get update
            sudo apt-get install -y google-chrome-stable
            google-chrome --version
      - run:
          name: Build and run daily tests
          command: mvn clean test "-Dsurefire.suiteXmlFiles=regression8.xml" "-Drun.headless=true" "-Dtest.env=uat" "-Dcreate.cycle=true" || true
      - store_artifacts:
          path: target/surefire-reports
          destination: daily-build-and-test-artifacts-8
      - run:
          name: Verify Test Results Exist
          command: ls -R target/surefire-reports || echo "Test results missing!"
      - run:
          name: Copy test results to workspace
          command: |
            mkdir -p ~/workspace
            for file in target/surefire-reports/TEST-*.xml; do
              [ -f "$file" ] && cp "$file" ~/workspace/daily-build-and-test-8_$(basename "$file")
            done
      - persist_to_workspace:
          root: ~/workspace
          paths:
            - daily-build-and-test-8_TEST-*.xml
    executor:


  calculate-pass-fail-rate:
    docker:
      - image: cimg/base:stable
    resource_class: xlarge
    steps:
      - attach_workspace:
          at: ~/workspace
      - run:
          name: Install bc for calculations
          command: |
            sudo apt-get update && sudo apt-get install -y bc
      - run:
          name: Debug Workspace Contents
          command: ls -R ~/workspace
      - run:
          name: Calculate Combined Pass/Fail Rate
          command: |
            echo "Processing test results from workspace..."
            find ~/workspace -name '*.xml' -print

            if [ -z "$(find ~/workspace -name '*.xml')" ]; then
               echo "No test result XMLs found! Exiting..."
               exit 1
            fi
            TOTAL=0
            PASSED=0
            FAILED=0

            for FILE in ~/workspace/*.xml; do
              TESTS=$(grep -oP '(?<=tests=")[0-9]+' "$FILE" | head -1)
              FAILURES=$(grep -oP '(?<=failures=")[0-9]+' "$FILE" | head -1)
              ERRORS=$(grep -oP '(?<=errors=")[0-9]+' "$FILE" | head -1)
              SKIPPED=$(grep -oP '(?<=skipped=")[0-9]+' "$FILE" | head -1)

              TESTS=${TESTS:-0}
              FAILURES=${FAILURES:-0}
              ERRORS=${ERRORS:-0}
              SKIPPED=${SKIPPED:-0}

            # Ensure ACTUAL_TOTAL is not negative
              ACTUAL_TOTAL=$((TESTS - SKIPPED - (ERRORS/2)))
              if [ "$ACTUAL_TOTAL" -lt 0 ]; then
                ACTUAL_TOTAL=0
              fi

              if [ "$ACTUAL_TOTAL" -gt 0 ]; then
                PASSED_IN_FILE=$((ACTUAL_TOTAL - FAILURES - ERRORS))
              else
                PASSED_IN_FILE=0
              fi

              TOTAL=$((TOTAL + ACTUAL_TOTAL))
              PASSED=$((PASSED + PASSED_IN_FILE))
              FAILED=$((FAILED + FAILURES + (ERRORS/2)))
            done

            if [ "$TOTAL" -eq 0 ]; then
              echo "No tests found in any XML files! Exiting..."
              exit 1
            fi

            PASS_RATE=$(echo "scale=2; ($PASSED / $TOTAL) * 100" | bc)
            FAIL_RATE=$(echo "scale=2; ($FAILED / $TOTAL) * 100" | bc)

            echo "Total tests run: $TOTAL"
            echo "Passed: $PASSED"
            echo "Failed: $FAILED"
            echo "Combined Pass Rate: $PASS_RATE%"
            echo "Fail Rate: $FAIL_RATE%"

            echo "TOTAL=$TOTAL" >> $BASH_ENV
            echo "PASSED=$PASSED" >> $BASH_ENV
            echo "FAILED=$FAILED" >> $BASH_ENV
            echo "PASS_RATE=$PASS_RATE" >> $BASH_ENV
            echo "FAIL_RATE=$FAIL_RATE" >> $BASH_ENV
            source $BASH_ENV

            # Set environment variables for Slack notification
            export SLACK_MESSAGE="Total tests run: $TOTAL\nPassed: $PASSED\nFailed: $FAILED\nPass Rate: $PASS_RATE%\nFail Rate: $FAIL_RATE%"

          # Send the test results to Slack
      - slack/notify:
          channel: "#test-alerts" # Replace with your Slack channel
          template: "${SLACK_MESSAGE}"
          event: always
          custom: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "Test Results:\nTotal: *${TOTAL:-N/A}*\n✅ Passed: *${PASSED:-N/A}*\n❌ Failed: *${FAILED:-N/A}*\n📊 Pass Rate: *${PASS_RATE:-N/A}*\n📉 Fail Rate: *${FAIL_RATE:-N/A}%*"
                  }
                }
              ]
            }

    executor:


workflows:
  version: 2
  build-and-test:
    jobs:
      - build-and-test

  scheduled-test-1:
    triggers:
      - schedule:
          cron: "00 07 * * *"  # This will run nightly-build-and-test at 12:00 AM IST (6:30 PM UTC)   -- 30 18 * * * ahsan_dev  30 18
          filters:
            branches:
              only:
                - ahsan_dev
    jobs:
      - nightly-build-and-test-1
      - nightly-build-and-test-2
      - nightly-build-and-test-3
      - nightly-build-and-test-4
      - nightly-build-and-test-5
      - calculate-pass-fail-rate:
          requires:
            - nightly-build-and-test-1
            - nightly-build-and-test-2
            - nightly-build-and-test-3
            - nightly-build-and-test-4
            - nightly-build-and-test-5

  scheduled-test-1-sub1:
    triggers:
      - schedule:
          cron: "00 08 * * *"  # This will run nightly-build-and-test at 2:00 AM IST (08:30 PM UTC) -- 45 06 * * *  ahsan_dev  20 19
          filters:
            branches:
              only:
                - ahsan_dev
    jobs:
      - nightly-build-and-test-6
      - nightly-build-and-test-7
      - nightly-build-and-test-8
      - calculate-pass-fail-rate:
          requires:
            - nightly-build-and-test-6
            - nightly-build-and-test-7
            - nightly-build-and-test-8


  scheduled-test-2:
    triggers:
      - schedule:
          cron: "25 06 * * 1-5"  # This will run daily-build-and-test at 11:15 AM IST (05:45 AM UTC) // 25 06 --> DP gap = 40 min
          filters:
            branches:
              only:
                - main
    jobs:
      - daily-build-and-test-1
      - daily-build-and-test-2
      - daily-build-and-test-3
      - daily-build-and-test-4
      - daily-build-and-test-5
      - calculate-pass-fail-rate:
          requires:
            - daily-build-and-test-1
            - daily-build-and-test-2
            - daily-build-and-test-3
            - daily-build-and-test-4
            - daily-build-and-test-5

  scheduled-test-2-sub1:
    triggers:
      - schedule:
          cron: "25 07 * * 1-5"  # This will run daily-build-and-test at 11:15 AM IST (05:45 AM UTC) // 15 07  --> 1st job gap = 50 min
          filters:
            branches:
              only:
                - main
    jobs:
      - daily-build-and-test-6
      - daily-build-and-test-7
      - daily-build-and-test-8
      - calculate-pass-fail-rate:
          requires:
            - daily-build-and-test-6
            - daily-build-and-test-7
            - daily-build-and-test-8